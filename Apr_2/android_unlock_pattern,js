//https://www.lintcode.com/problem/909/
//https://leetcode.com/problems/android-unlock-patterns/
function count_pattern(visited, curr, k, via) {
    // console.log(curr, k)
    if(k == 0) {
        return 1;
    }
    visited[curr] = true;
    let result = 0;
    for(let i = 1; i <= 9; i++) {
        if(!visited[i] && (via[curr][i] == 0 || visited[via[curr][i]] == true)) {
            result += count_pattern(visited, i, k-1, via);
        }
    }
    visited[curr] = false;
    return result;
}
var numberOfPatterns = function(m, n) {
    let via = new Array(10);
    for(let i = 0; i < 10; i++) {
        via[i] = new Array(10).fill(0);
    }
    via[1][3] = via[3][1] = 2;
    via[1][7] = via[7][1] = 4;
    via[7][9] = via[9][7] = 8;
    via[3][9] = via[9][3] = 6;
    via[1][9] = via[9][1] = via[2][8] = via[8][2] = via[3][7] = via[7][3] = via[4][6] = via[6][4] = 5;
    
    let visited = new Array(10).fill(false);
    let ways = 0; 
    for(let i = m; i <= n; i++) {
        let x = count_pattern(visited, 1, i-1, via);
        // console.log(x, i);
        visited = new Array(10).fill(false);
        let y = count_pattern(visited, 2, i-1, via);
        visited = new Array(10).fill(false);
        // console.log(y);
        
        let z = count_pattern(visited, 5, i-1, via);
        visited = new Array(10).fill(false);
        // console.log(z);
        
        ways += 4*x + 4*y + z;
    }
    return ways;
};
